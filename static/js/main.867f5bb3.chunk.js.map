{"version":3,"sources":["serviceWorker.js","state.js","index.js","ipfs.js","App.js"],"names":["Boolean","window","location","hostname","match","initialState","Immutable","fromJS","hello","actions","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","arguments","length","undefined","action","type","applyMiddleware","thunk","installStyles","theme","createMuiTheme","typography","useNextVariants","ReactDOM","render","react_default","a","createElement","es","styles","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","node","require","EXPERIMENTAL","pubsub","dht","config","Addresses","Swarm","Math","random","toString","slice","ipfs","on","Object","_home_rasmuserik_cloud_app_2019_stop_motion_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_rasmuserik_cloud_app_2019_stop_motion_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","console","log","e","stop","error","sleep","ms","Promise","resolve","setTimeout","decode","bytes","JSON","parse","TextDecoder","encode","data","Buffer","from","stringify","chan","hash","uiType","msgs","this","setState","subscribe","msg","_this2","concat","_home_rasmuserik_cloud_app_2019_stop_motion_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","recvFrom","recvDate","Date","toISOString","setInterval","publish","ua","userAgent","role","time","mediaDevices","getUserMedia","audio","video","stream","srcObject","play","onclick","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","getImageData","code","jsQR","_context2","t0","props","classes","_this$state","qrUrl","href","replace","react__WEBPACK_IMPORTED_MODULE_8___default","style","display","textAlign","float","marginLeft","qrcode_react__WEBPACK_IMPORTED_MODULE_14___default","value","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11___default","variant","gutterBottom","position","left","top","textShadow","maxWidth","innerWidth","maxHeight","innerHeight","id","_this3","renderComputer","renderCamera","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","color","className","button","onClick","startComputer","startCamera","component","react_markdown__WEBPACK_IMPORTED_MODULE_13___default","source","Component","withStyles","margin","spacing","unit"],"mappings":"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","file":"static/js/main.867f5bb3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport Immutable from 'immutable';\n\nconst initialState = Immutable.fromJS({hello: 'world'});\nexport const actions = {}\n\nexport function root(state = initialState, action) {\n  if(actions[action.type]) {\n    return actions[action.type](state, action);\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(root, composeEnhancers(applyMiddleware(thunk)));\n\n","import { install as installStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state\";\nimport \"typeface-roboto\";\ninstallStyles();\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\nfunction render() {\n  ReactDOM.render(\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n}\nrender();\n\n/*\nif (module.hot) {\n  module.hot.accept([\"./App\"], render);\n}\n*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const IPFS = require(\"ipfs\");\nexport const node = new IPFS({\n  EXPERIMENTAL: { pubsub: true, dht: true },\n  config: {\n    Addresses: {\n      Swarm: [\n        \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\n      ]\n    }\n  }\n});\nconst id = Math.random()\n  .toString(36)\n  .slice(2);\nwindow.ipfs = node;\nnode.on(\"ready\", async () => {\n  try {\n    console.log(\"IPFS READY\");\n    /*\n    await node.pubsub.subscribe(\"solsort-stop-motion\", msg =>\n      console.log(\"pubsub\", new TextDecoder(\"utf-8\").decode(msg.data))\n    );\n    setInterval(() =>\n    node.pubsub.publish(\n      \"solsort-stop-motion\",\n      Buffer.from(`hello from ${id} ` + window.navigator.userAgent)\n    ), 5000);\n    */\n  } catch (e) {\n    console.log(\"ipfserr\", e);\n  }\n});\nnode.on(\"error\", error => {\n  console.error(\"IPFS Error:\", error);\n});\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport jsQR from \"jsqr\";\nimport ReactMarkdown from \"react-markdown\";\nimport QRCode from \"qrcode.react\";\nimport { node } from \"./ipfs\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  }\n});\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nfunction decode(bytes) {\n  try {\n    return JSON.parse(new TextDecoder(\"utf-8\").decode(bytes));\n  } catch (e) {\n    return undefined;\n  }\n}\nfunction encode(data) {\n  return Buffer.from(JSON.stringify(data));\n}\n\nclass App extends Component {\n  state = {\n    chan: window.location.hash.slice(1) || undefined,\n    uiType: undefined,\n    msgs: []\n  };\n  async startComputer() {\n    let { chan } = this.state;\n    this.setState({ uiType: \"computer\" });\n\n    if (!chan) {\n      chan = Math.random()\n        .toString(36)\n        .slice(2);\n      this.setState({ chan });\n    }\n\n    await node.pubsub.subscribe(\"solsort-stop-motion-\" + chan, msg => {\n      const { msgs } = this.state;\n      const data = decode(msg.data);\n      console.log(\"solsort-stop-motion-\" + chan, \"data\", data, msg);\n      if (data) {\n        this.setState({\n          msgs: msgs.concat([\n            { recvFrom: msg.from, recvDate: new Date().toISOString(), ...data }\n          ])\n        });\n      }\n    });\n    console.log(\"solsort-stop-motion-\" + chan);\n    setInterval(\n      () =>\n        node.pubsub.publish(\n          \"solsort-stop-motion-\" + chan,\n          encode({\n            ua: window.navigator.userAgent,\n            role: \"computer\",\n            chan,\n            time: new Date().toISOString()\n          })\n        ),\n      5000\n    );\n  }\n\n  async startCamera() {\n    try {\n      let { chan } = this.state;\n      this.setState({ uiType: \"camera\" });\n      await sleep(300);\n\n      // setup camera\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: true\n      });\n      const video = document.getElementById(\"cameraPreview\");\n      video.srcObject = stream;\n      video.play();\n      window.stream = stream;\n      video.onclick = () => {\n        const canvas = document.getElementById(\"capturedFrame\");\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const { data } = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const code = jsQR(data, canvas.width, canvas.height);\n        console.log(\"jsqr\", code);\n      };\n\n      // setup ipfs\n      //\n      setInterval(\n        () =>\n          node.pubsub.publish(\n            \"solsort-stop-motion-\" + chan,\n            encode({\n              ua: window.navigator.userAgent,\n              role: \"camera\",\n              chan,\n              time: new Date().toISOString()\n            })\n          ),\n        5000\n      );\n    } catch (e) {\n      console.log(\"startCamera error\", e);\n      throw e;\n    }\n  }\n  renderComputer() {\n    const { classes } = this.props;\n    const { chan, msgs } = this.state;\n    const qrUrl = window.location.href.replace(/#.*./, \"\") + \"#\" + chan;\n    return (\n      <div>\n        <center>\n          <br />\n          <div\n            style={{ display: \"inline-block\", width: 520, textAlign: \"left\" }}\n          >\n            <div style={{ float: \"right\", marginLeft: 8 }}>\n              <QRCode value={qrUrl} />\n            </div>\n            <Typography variant=\"h3\" gutterBottom={true}>\n              Connect camera\n            </Typography>\n            <Typography>\n              To connect a camera, open the web-app, scan the QR-code, or open\n              the following url on your mobile phone / device: <br />{\" \"}\n              <code>{qrUrl}</code>\n              <br />\n            </Typography>\n          </div>\n        </center>\n        <pre>{JSON.stringify(msgs, null, 4)}</pre>\n      </div>\n    );\n  }\n  renderCamera() {\n    const { classes } = this.props;\n    const { chan } = this.state;\n    return (\n      <center>\n        {!chan && (\n          <div\n            style={{\n              position: \"fixed\",\n              left: \"50%\",\n              width: 320,\n              marginLeft: -160,\n              top: 50,\n              display: \"inline-block\",\n              textShadow: \"1px 1px 4px white\"\n            }}\n          >\n            <Typography variant=\"h4\" gutterBottom={true}>\n              Point the camera to the QR-code on the computer to connect.\n            </Typography>\n          </div>\n        )}\n        <video\n          style={{ maxWidth: window.innerWidth, maxHeight: window.innerHeight }}\n          id=\"cameraPreview\"\n        />{\" \"}\n        <br />\n        <canvas id=\"capturedFrame\" />\n      </center>\n    );\n  }\n  render() {\n    const { uiType } = this.state;\n    const { classes } = this.props;\n\n    if (uiType === \"computer\") {\n      return this.renderComputer();\n    }\n    if (uiType === \"camera\") {\n      return this.renderCamera();\n    }\n\n    return (\n      <center>\n        <Typography gutterBottom={true} variant=\"h2\">\n          Stop Motion\n        </Typography>\n        <Typography>\n          Is this the UI on a computer/tablet or is it a camera/tablet/phone?\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => this.startComputer()}\n        >\n          Computer\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => this.startCamera()}\n        >\n          Camera\n        </Button>\n        <Typography component=\"div\">\n          <div style={{ textAlign: \"left\", maxWidth: \"60ex\" }}>\n            <ReactMarkdown\n              source={`\n\n### About\n\n\nThis is a simple tool for making stop motion animations, with a UI running on a computer/tablet while using a mobile phone or similar as a remote controlled camera. \n\n\n            `}\n            />\n          </div>\n        </Typography>\n      </center>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n\n/*\nexport const chan =\n  window.location.hash.slice(1) ||\n  Math.random()\n    .toString(36)\n    .slice(2);\nasync function openCamera() {\n  console.log(\"here\");\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: true\n    });\n    const video = document.getElementById(\"video\");\n    video.srcObject = stream;\n    video.play();\n    window.stream = stream;\n    video.onclick = () => {\n      const canvas = document.getElementById(\"frame\");\n      console.log(\"capture\", canvas);\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const { data } = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const code = jsQR(data, canvas.width, canvas.height);\n      console.log(\"jsqr\", code);\n    };\n  } catch (e) {\n    console.log(\"video error\", e);\n    console.log(e);\n    throw e;\n  }\n}\n      <button onClick={openCamera}>open camera</button>\n      <video id=\"video\" width={100} />\n      <canvas id=\"frame\" />\n      */\n"],"sourceRoot":""}